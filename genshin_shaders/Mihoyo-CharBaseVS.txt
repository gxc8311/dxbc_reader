//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// COLOR                    0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float   xyzw
// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
// TEXCOORD                 3   xyzw        5     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[66], immediateIndexed
dcl_constantbuffer cb1[7], immediateIndexed
dcl_constantbuffer cb2[8], immediateIndexed
dcl_constantbuffer cb3[25], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xy
dcl_input v3.xy
dcl_input v4.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyz
dcl_output o5.w
dcl_output o6.xyz
dcl_output o7.xyzw
dcl_temps 6
lt r0.x, l(0.5000), cb0[65].w
mov r1.x, cb0[65].x
mov r1.yz, -cb0[65].yyzy
movc r0.xyz, r0.xxxx, r1.xyzx, cb0[61].xyzx
dp3 r0.w, r0.xyzx, cb2[1].xyzx
dp3 r1.x, r0.xyzx, cb2[2].xyzx
mul r1.yzw, v0.yyyy, cb2[1].xxyz
mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
mad o7.xyz, cb2[3].xyzx, v0.wwww, r1.yzwy
ne r1.y, l(0, 0, 0, 0), cb0[47].w
ne r1.z, l(0, 0, 0, 0), cb0[48].x
lt r1.w, abs(cb0[49].w), l(0.0010)
mul r2.xyz, cb0[49].wwww, cb0[49].xyzx
movc r2.xyz, r1.wwww, l(0, 0, 0, 0), r2.xyzx
mul r3.xyzw, r2.yyyy, cb2[5].xyzw
mad r3.xyzw, cb2[4].xyzw, r2.xxxx, r3.xyzw
mad r2.xyzw, cb2[6].xyzw, r2.zzzz, r3.xyzw
add r2.xyzw, r2.xyzw, cb2[7].xyzw
div r2.xyz, r2.xyzx, r2.wwww
mul r3.xyz, cb0[49].yyyy, cb2[5].xyzx
mad r3.xyz, cb2[4].xyzx, cb0[49].xxxx, r3.xyzx
mad r3.xyz, cb2[6].xyzx, cb0[49].zzzz, r3.xyzx
dp3 r1.w, r2.xyzx, r3.xyzx
dp3 r2.x, v0.xyzx, r3.xyzx
lt r2.y, r2.x, r1.w
add r1.w, -r1.w, r2.x
mad r3.xyz, -r1.wwww, r3.xyzx, v0.xyzx
mov r3.w, l(0)
mov r4.xyz, v0.xyzx
mov r4.w, v4.w
movc r2.xyzw, r2.yyyy, r3.xyzw, r4.xyzw
dp3 r1.w, v0.xyzx, cb0[49].xyzx
add r3.x, cb0[49].w, l(-0.0100)
lt r3.x, r1.w, r3.x
add r1.w, r1.w, -cb0[49].w
mad r5.xyz, -r1.wwww, cb0[49].xyzx, v0.xyzx
mov r5.w, l(0)
movc r3.xyzw, r3.xxxx, r5.xyzw, r4.xyzw
movc r2.xyzw, r1.zzzz, r2.xyzw, r3.xyzw
movc r2.xyzw, r1.yyyy, r2.xyzw, r4.xyzw
add r3.xyw, -cb1[5].xyxz, cb2[3].xyxz
mov r4.x, cb2[0].x
mov r4.y, cb2[1].x
mov r4.z, cb2[2].x
mov r4.w, r3.x
mov r5.xyz, r2.xyzx
mov r5.w, l(1.0000)
dp4 r1.y, r4.xyzw, r5.xyzw
mov r4.x, cb2[0].y
mov r4.y, cb2[1].y
mov r4.z, cb2[2].y
mov r4.w, r3.y
dp4 r1.z, r4.xyzw, r5.xyzw
mov r3.x, cb2[0].z
mov r3.y, cb2[1].z
mov r3.z, cb2[2].z
dp4 r1.w, r3.xyzw, r5.xyzw
mov r3.x, cb2[0].w
mov r3.y, cb2[1].w
mov r3.z, cb2[2].w
mov r3.w, cb2[3].w
dp4 r2.x, r3.xyzw, r5.xyzw
mul r3.xyzw, r1.zzzz, cb3[22].xyzw
mad r3.xyzw, cb3[21].xyzw, r1.yyyy, r3.xyzw
mad r3.xyzw, cb3[23].xyzw, r1.wwww, r3.xyzw
mad r3.xyzw, cb3[24].xyzw, r2.xxxx, r3.xyzw
mul r4.xyzw, r5.yyyy, cb2[1].xyzw
mad r4.xyzw, cb2[0].xyzw, r5.xxxx, r4.xyzw
mad r4.xyzw, cb2[2].xyzw, r5.zzzz, r4.xyzw
mad r4.xyzw, cb2[3].xyzw, v0.wwww, r4.xyzw
div o5.xyz, r4.xyzx, r4.wwww
mad o2.xy, v2.xyxx, cb0[11].xyxx, cb0[11].zwzz
mad o2.zw, v3.xxxy, cb0[11].xxxy, cb0[11].zzzw
mul r4.xz, r3.xxwx, l(0.5000, 0.0000, 0.5000, 0.0000)
mul r1.y, r3.y, cb1[6].x
mul r4.w, r1.y, l(0.5000)
add o4.xy, r4.zzzz, r4.xwxx
dp3 r2.x, v1.xyzx, cb2[4].xyzx
dp3 r2.y, v1.xyzx, cb2[5].xyzx
dp3 r2.z, v1.xyzx, cb2[6].xyzx
dp3 r1.y, r2.xyzx, r2.xyzx
rsq r1.y, r1.y
mul r1.yzw, r1.yyyy, r2.xxyz
dp3 r0.x, r1.yzwy, r0.xyzx
mad o3.w, r0.x, l(0.4975), l(0.5000)
min r0.x, abs(r0.w), abs(r1.x)
max r0.y, abs(r0.w), abs(r1.x)
div r0.y, l(1.0000, 1.0000, 1.0000, 1.0000), r0.y
mul r0.x, r0.y, r0.x
mul r0.y, r0.x, r0.x
mad r0.z, r0.y, l(0.0208), l(-0.0851)
mad r0.z, r0.y, r0.z, l(0.1801)
mad r0.z, r0.y, r0.z, l(-0.3303)
mad r0.y, r0.y, r0.z, l(0.9999)
mul r0.z, r0.y, r0.x
lt r2.x, abs(r0.w), abs(r1.x)
mad r0.z, r0.z, l(-2.0000), l(1.5708)
and r0.z, r2.x, r0.z
mad r0.x, r0.x, r0.y, r0.z
lt r0.y, r0.w, -r0.w
and r0.y, r0.y, l(-3.1416)
add r0.x, r0.y, r0.x
min r0.y, r0.w, r1.x
max r0.z, r0.w, r1.x
lt r0.y, r0.y, -r0.y
ge r0.z, r0.z, -r0.z
and r0.y, r0.z, r0.y
movc r0.x, r0.y, -r0.x, r0.x
lt r0.y, l(0), -r0.x
mul r0.x, r0.x, l(-0.3183)
max r0.z, cb0[25].x, l(0)
add r0.w, cb0[25].x, l(1.0000)
min r0.w, r0.w, l(1.0000)
add r0.w, -r0.z, r0.w
add r0.x, -r0.z, abs(r0.x)
div r0.z, l(1.0000, 1.0000, 1.0000, 1.0000), r0.w
mul_sat r0.x, r0.z, r0.x
mad r0.z, r0.x, l(-2.0000), l(3.0000)
mul r0.x, r0.x, r0.x
mul r0.x, r0.x, r0.z
max r0.x, r0.x, l(0.0001)
min o6.z, r0.x, l(0.9999)
mad r0.xz, v2.xxyx, l(-1.0000, 0.0000, 1.0000, 0.0000), l(1.0000, 0.0000, 0.0000, 0.0000)
movc o6.xy, r0.yyyy, r0.xzxx, v2.xyxx
ne r0.x, l(0, 0, 0, 0), cb0[26].w
if_nz r0.x
sample_l(texture2d)(float,float,float,float) r0.x, cb0[28].xyxx, t0.xyzw, s0, l(0)
lt r0.x, l(0.5000), r0.x
and o5.w, r0.x, l(1.0000)
else
mov o5.w, l(0)
endif
mov o0.xyzw, r3.xyzw
mov o1.xyz, v4.xyzx
mov o1.w, r2.w
mov o3.xyz, r1.yzwy
mov o4.zw, r3.zzzw
mov o7.w, l(0)
ret
